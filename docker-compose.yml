x-base_service: &base_service
    ports:
      - "${WEBUI_PORT:-7860}:7860"
    volumes:
      # volume 1 is read only (:ro)
      - &v1 ./data:/data:ro
      - &v2 ./data/models/clip/clip-vit-large-patch14:/stable-diffusion/models/clip/clip-vit-large-patch14:ro
      - &v3 ./data/models/LLM:/stable-diffusion/models/LLM:ro
      - &v4 /media/veracrypt1/checkpoints:/stable-diffusion/models/checkpoints:ro
      - &v5 /media/veracrypt1/loras:/stable-diffusion/models/loras:ro
      #- &v3 ./data/models/LLM/llava-llama-3-8b-text-encoder-tokenizer:/stable-diffusion/models/LLM/llava-llama-3-8b-text-encoder-tokenizer:ro
      # temp fs
      - type: tmpfs
        target: /stable-diffusion/temp
        tmpfs:
          size: "1g"
      - type: tmpfs
        target: /stable-diffusion/input
        tmpfs:
          size: "1g"
      - type: tmpfs
        target: /stable-diffusion/output
        tmpfs:
          size: "1g"
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: "1g"
      - type: tmpfs
        target: /var/tmp
        tmpfs:
          size: "1g"
      - type: tmpfs
        target: /run
        tmpfs:
          size: "1g"
      #- &v2 ./output:/output
    stop_signal: SIGKILL
    tty: true
    restart: "no"
    #networks:
    #  - isolated
    read_only: true
    #user: "1000:1000"
    cap_drop:
      - SYS_ADMIN
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      restart_policy:
        condition: none
      resources:
        reservations:
          devices:
              - driver: nvidia
                count: all
                capabilities: [gpu]
                #device_ids: ['0']
                #capabilities: [compute, utility]

name: webui-docker
#networks:
#  isolated:
#    driver: bridge
#    internal: true

services:
  # download:
  #   build: ./services/download/
  #   profiles: ["download"]
  #   volumes:
  #     - *v1

  # auto: &automatic
  #   <<: *base_service
  #   profiles: ["auto"]
  #   build: ./services/AUTOMATIC1111
  #   image: sd-auto:78
  #   environment:
  #     - CLI_ARGS=--allow-code --medvram --xformers --enable-insecure-extension-access --api

  # auto-cpu:
  #   <<: *automatic
  #   profiles: ["auto-cpu"]
  #   deploy: {}
  #   environment:
  #     - CLI_ARGS=--no-half --precision full --allow-code --enable-insecure-extension-access --api

  comfy: &comfy
    <<: *base_service
    profiles: ["comfy"]
    build: ./services/comfy/
    image: sd-comfy:7
    attach: false
    environment:
      - CLI_ARGS=

  # comfy-cpu:
  #   <<: *comfy
  #   profiles: ["comfy-cpu"]
  #   deploy: {}
  #   environment:
  #     - CLI_ARGS=--cpu
